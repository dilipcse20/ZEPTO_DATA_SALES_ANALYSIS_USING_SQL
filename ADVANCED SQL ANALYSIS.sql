-- Q9. FIND THE TOP 3 CATEGORIES WITH THE HIGHEST TOTAL REVENUE, BUT ONLY INCLUDE CATEGORIES WHERE THE AVERAGE DISCOUNT PERCENTAGE IS ABOVE 15% AND THERE ARE AT LEAST 5 PRODUCTS IN STOCK.
SELECT CATEGORY, SUM(DISCOUNTEDSELLINGPRICE * QUANTITY) AS TOTAL_REVENUE
FROM ZEPTO
WHERE OUTOFSTOCK = 0
GROUP BY CATEGORY
HAVING AVG(DISCOUNTPERCENT) > 15 AND COUNT(*) >= 5
ORDER BY TOTAL_REVENUE DESC
LIMIT 3;
-- PURPOSE: THIS QUERY IDENTIFIES HIGH-PERFORMING CATEGORIES BASED ON REVENUE WHILE FILTERING FOR THOSE WITH MEANINGFUL DISCOUNTS AND SUFFICIENT IN-STOCK PRODUCTS, HELPING IN INVENTORY PRIORITIZATION AND PROMOTIONAL STRATEGY ANALYSIS. IT COVERS SKILLS LIKE AGGREGATION, GROUPING WITH HAVING CLAUSE, FILTERING, AND SORTING.

-- Q10. RANK PRODUCTS WITHIN EACH CATEGORY BY THEIR DISCOUNTED SELLING PRICE IN DESCENDING ORDER, AND INCLUDE A COLUMN SHOWING THE PRICE DIFFERENCE FROM THE MOST EXPENSIVE PRODUCT IN THAT CATEGORY.
SELECT CATEGORY, NAME, DISCOUNTEDSELLINGPRICE,
RANK() OVER (PARTITION BY CATEGORY ORDER BY DISCOUNTEDSELLINGPRICE DESC) AS PRICE_RANK,
MAX(DISCOUNTEDSELLINGPRICE) OVER (PARTITION BY CATEGORY) - DISCOUNTEDSELLINGPRICE AS PRICE_DIFFERENCE_FROM_TOP
FROM ZEPTO
ORDER BY CATEGORY, PRICE_RANK;
-- PURPOSE: THIS QUERY PROVIDES A RANKED VIEW OF PRODUCTS BY PRICE WITHIN CATEGORIES, HIGHLIGHTING VALUE GAPS, WHICH IS USEFUL FOR COMPETITIVE PRICING ANALYSIS AND IDENTIFYING PREMIUM VS. BUDGET ITEMS. IT DEMONSTRATES WINDOW FUNCTIONS LIKE RANK() AND AGGREGATE OVER PARTITIONS.

-- Q11. CALCULATE THE CUMULATIVE RUNNING TOTAL OF REVENUE ACROSS ALL PRODUCTS SORTED BY MRP IN DESCENDING ORDER, AND FLAG PRODUCTS WHERE THE CUMULATIVE REVENUE EXCEEDS 50% OF THE TOTAL OVERALL REVENUE.
WITH TOTAL_REVENUE AS (
    SELECT SUM(DISCOUNTEDSELLINGPRICE * QUANTITY) AS GRAND_TOTAL FROM ZEPTO
),
CUMULATIVE AS (
    SELECT NAME, MRP, DISCOUNTEDSELLINGPRICE * QUANTITY AS PRODUCT_REVENUE,
    SUM(DISCOUNTEDSELLINGPRICE * QUANTITY) OVER (ORDER BY MRP DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS RUNNING_TOTAL
    FROM ZEPTO
)
SELECT NAME, MRP, PRODUCT_REVENUE, RUNNING_TOTAL,
CASE WHEN RUNNING_TOTAL > (SELECT GRAND_TOTAL FROM TOTAL_REVENUE) * 0.5 THEN 'EXCEEDS_50_PERCENT' ELSE 'BELOW_50_PERCENT' END AS REVENUE_FLAG
FROM CUMULATIVE;
-- PURPOSE: THIS QUERY ANALYZES THE CONTRIBUTION OF HIGH-MRP PRODUCTS TO OVERALL REVENUE USING CUMULATIVE SUMS, HELPING IDENTIFY KEY REVENUE DRIVERS (E.G., PARETO ANALYSIS). IT COVERS CTEs, WINDOW FUNCTIONS FOR CUMULATIVE TOTALS, SUBQUERIES, AND CASE STATEMENTS.

-- Q12. FIND PRODUCTS THAT HAVE A HIGHER DISCOUNT PERCENTAGE THAN THE AVERAGE DISCOUNT IN THEIR CATEGORY, AND CALCULATE HOW MUCH MORE DISCOUNT THEY OFFER COMPARED TO THE CATEGORY AVERAGE, SORTED BY CATEGORY AND EXTRA DISCOUNT DESCENDING.
WITH CATEGORY_AVG AS (
    SELECT CATEGORY, AVG(DISCOUNTPERCENT) AS AVG_DISCOUNT FROM ZEPTO GROUP BY CATEGORY
)
SELECT Z.CATEGORY, Z.NAME, Z.DISCOUNTPERCENT,
Z.DISCOUNTPERCENT - CA.AVG_DISCOUNT AS EXTRA_DISCOUNT
FROM ZEPTO Z
JOIN CATEGORY_AVG CA ON Z.CATEGORY = CA.CATEGORY
WHERE Z.DISCOUNTPERCENT > CA.AVG_DISCOUNT
ORDER BY Z.CATEGORY, EXTRA_DISCOUNT DESC;
-- PURPOSE: THIS QUERY HIGHLIGHTS OVER-DISCOUNTED PRODUCTS RELATIVE TO THEIR CATEGORY, AIDING IN DISCOUNT OPTIMIZATION AND POTENTIAL PROFIT LEAK IDENTIFICATION. IT UTILIZES CTEs, SELF-JOINS, SUBQUERY COMPARISONS, AND ARITHMETIC CALCULATIONS.

-- Q13. FOR EACH CATEGORY, FIND THE PRODUCT WITH THE MAXIMUM WEIGHT IN GRAMS THAT IS NOT OUT OF STOCK, AND INCLUDE THE PERCENTAGE OF TOTAL CATEGORY WEIGHT IT REPRESENTS.
WITH CATEGORY_WEIGHT AS (
    SELECT CATEGORY, SUM(WEIGHTINGMS) AS TOTAL_WEIGHT FROM ZEPTO WHERE OUTOFSTOCK = 0 GROUP BY CATEGORY
),
MAX_WEIGHT_PRODUCT AS (
    SELECT CATEGORY, NAME, WEIGHTINGMS,
    ROW_NUMBER() OVER (PARTITION BY CATEGORY ORDER BY WEIGHTINGMS DESC) AS RN
    FROM ZEPTO WHERE OUTOFSTOCK = 0
)
SELECT MWP.CATEGORY, MWP.NAME, MWP.WEIGHTINGMS,
ROUND((MWP.WEIGHTINGMS / CW.TOTAL_WEIGHT) * 100, 2) AS WEIGHT_PERCENTAGE
FROM MAX_WEIGHT_PRODUCT MWP
JOIN CATEGORY_WEIGHT CW ON MWP.CATEGORY = CW.CATEGORY
WHERE MWP.RN = 1
ORDER BY WEIGHT_PERCENTAGE DESC;
-- PURPOSE: THIS QUERY IDENTIFIES DOMINANT PRODUCTS BY WEIGHT IN EACH CATEGORY, USEFUL FOR LOGISTICS PLANNING AND STORAGE ALLOCATION. IT INVOLVES CTEs, WINDOW FUNCTIONS LIKE ROW_NUMBER() FOR RANKING, JOINS, AND PERCENTAGE CALCULATIONS.

-- Q14. CALCULATE THE AVERAGE PRICE PER GRAM ACROSS ALL PRODUCTS, THEN FIND CATEGORIES WHERE THE AVERAGE PRICE PER GRAM IS BELOW THIS GLOBAL AVERAGE, AND RANK THOSE CATEGORIES BY THEIR DEVIATION FROM THE GLOBAL AVERAGE.
WITH GLOBAL_AVG AS (
    SELECT AVG(DISCOUNTEDSELLINGPRICE / WEIGHTINGMS) AS GLOBAL_PRICE_PER_GRAM FROM ZEPTO WHERE WEIGHTINGMS > 0
),
CATEGORY_AVG AS (
    SELECT CATEGORY, AVG(DISCOUNTEDSELLINGPRICE / WEIGHTINGMS) AS CAT_PRICE_PER_GRAM
    FROM ZEPTO WHERE WEIGHTINGMS > 0 GROUP BY CATEGORY
)
SELECT CATEGORY, CAT_PRICE_PER_GRAM,
GLOBAL_PRICE_PER_GRAM - CAT_PRICE_PER_GRAM AS DEVIATION_ABOVE_GLOBAL,
DENSE_RANK() OVER (ORDER BY GLOBAL_PRICE_PER_GRAM - CAT_PRICE_PER_GRAM DESC) AS DEVIATION_RANK
FROM CATEGORY_AVG
CROSS JOIN GLOBAL_AVG
WHERE CAT_PRICE_PER_GRAM < GLOBAL_PRICE_PER_GRAM
ORDER BY DEVIATION_RANK;
-- PURPOSE: THIS QUERY COMPARES CATEGORY VALUE METRICS AGAINST A GLOBAL BENCHMARK, HELPING IDENTIFY UNDERPRICED OR HIGH-VALUE CATEGORIES FOR PRICING ADJUSTMENTS. IT USES CTEs, CROSS JOINS FOR GLOBAL COMPARISONS, ARITHMETIC, AND DENSE_RANK() FOR ORDERING.

-- Q15. USING A RECURSIVE QUERY, SIMULATE A HIERARCHY OF PRODUCTS BY CATEGORY AND SUB-SORT THEM BY DISCOUNT PERCENTAGE LEVELS (E.G., HIGH >20%, MEDIUM 10-20%, LOW <10%), AND COUNT PRODUCTS IN EACH LEVEL PER CATEGORY.
WITH RECURSIVE DISCOUNT_LEVELS (LEVEL, MIN_DISC, MAX_DISC) AS (
    SELECT 'HIGH', 20.01, 100.00
    UNION ALL
    SELECT 'MEDIUM', 10.00, 20.00
    UNION ALL
    SELECT 'LOW', 0.00, 9.99
)
SELECT DL.LEVEL, Z.CATEGORY, COUNT(Z.NAME) AS PRODUCT_COUNT
FROM DISCOUNT_LEVELS DL
LEFT JOIN ZEPTO Z ON Z.DISCOUNTPERCENT BETWEEN DL.MIN_DISC AND DL.MAX_DISC
GROUP BY DL.LEVEL, Z.CATEGORY
ORDER BY DL.LEVEL DESC, Z.CATEGORY, PRODUCT_COUNT DESC;
-- PURPOSE: THIS QUERY CREATES A SIMULATED HIERARCHY FOR DISCOUNT TIERS TO ANALYZE DISTRIBUTION ACROSS CATEGORIES, USEFUL FOR MARKETING SEGMENTATION. IT DEMONSTRATES RECURSIVE CTEs FOR GENERATING LEVELS, RANGE FILTERING WITH BETWEEN, LEFT JOINS, AND GROUPED COUNTS.

-- Q16. IDENTIFY PRODUCTS WHOSE DISCOUNTED SELLING PRICE IS HIGHER THAN THE AVERAGE DISCOUNTED SELLING PRICE OF THEIR CATEGORY, AND CALCULATE THE PERCENTAGE OF TOTAL CATEGORY REVENUE THEY CONTRIBUTE, EXCLUDING OUT-OF-STOCK PRODUCTS.
WITH CATEGORY_AVG AS (
    SELECT CATEGORY, AVG(DISCOUNTEDSELLINGPRICE) AS AVG_CAT_PRICE,
           SUM(DISCOUNTEDSELLINGPRICE * QUANTITY) AS TOTAL_CAT_REVENUE
    FROM ZEPTO
    WHERE OUTOFSTOCK = 0
    GROUP BY CATEGORY
),
PRODUCT_CONTRIBUTION AS (
    SELECT Z.CATEGORY, Z.NAME, Z.DISCOUNTEDSELLINGPRICE,
           (Z.DISCOUNTEDSELLINGPRICE * Z.QUANTITY) AS PRODUCT_REVENUE,
           CA.AVG_CAT_PRICE, CA.TOTAL_CAT_REVENUE
    FROM ZEPTO Z
    JOIN CATEGORY_AVG CA ON Z.CATEGORY = CA.CATEGORY
    WHERE Z.OUTOFSTOCK = 0 AND Z.DISCOUNTEDSELLINGPRICE > CA.AVG_CAT_PRICE
)
SELECT CATEGORY, NAME, DISCOUNTEDSELLINGPRICE,
       ROUND((PRODUCT_REVENUE / TOTAL_CAT_REVENUE) * 100, 2) AS REVENUE_CONTRIBUTION_PERCENT
FROM PRODUCT_CONTRIBUTION
ORDER BY CATEGORY, REVENUE_CONTRIBUTION_PERCENT DESC;
-- PURPOSE: THIS QUERY IDENTIFIES HIGH-PRICED PRODUCTS (RELATIVE TO THEIR CATEGORY AVERAGE) AND THEIR REVENUE IMPACT, AIDING IN UNDERSTANDING WHICH PREMIUM PRODUCTS DRIVE CATEGORY PERFORMANCE. IT DEMONSTRATES CTEs, JOINS, GROUP BY AGGREGATIONS, AND PERCENTAGE CALCULATIONS, WITH A FOCUS ON FILTERING AND COMPARATIVE ANALYSIS.

-- Q17. FOR EACH CATEGORY, FIND THE PRODUCT WITH THE HIGHEST PRICE-TO-WEIGHT RATIO THAT Ascertain THAT IS IN STOCK, AND COMPARE ITS DISCOUNT PERCENTAGE TO THE MEDIAN DISCOUNT PERCENTAGE OF ALL IN-STOCK PRODUCTS IN THAT CATEGORY.
WITH MEDIAN_DISCOUNT AS (
    SELECT 
        CATEGORY,
        (
            SELECT AVG(DISCOUNTPERCENT) AS median
            FROM (
                SELECT DISCOUNTPERCENT
                FROM ZEPTO z_sub
                WHERE z_sub.OUTOFSTOCK = 0
                AND z_sub.CATEGORY = z_main.CATEGORY
                ORDER BY DISCOUNTPERCENT
                LIMIT 2 - (SELECT COUNT(*) % 2 FROM ZEPTO z_count WHERE z_count.OUTOFSTOCK = 0 AND z_count.CATEGORY = z_main.CATEGORY)
                OFFSET (
                    SELECT FLOOR((COUNT(*) - 1) / 2)
                    FROM ZEPTO z_count
                    WHERE z_count.OUTOFSTOCK = 0 AND z_count.CATEGORY = z_main.CATEGORY
                )
            ) AS MEDIAN_DISCOUNT
    FROM ZEPTO z_main
    WHERE OUTOFSTOCK = 0
    GROUP BY CATEGORY
),
PRICE_WEIGHT_RANK AS (
    SELECT 
        CATEGORY, 
        NAME, 
        DISCOUNTPERCENT, 
        (DISCOUNTEDSELLINGPRICE / WEIGHTINGMS) AS PRICE_PER_GRAM,
        ROW_NUMBER() OVER (PARTITION BY CATEGORY ORDER BY (DISCOUNTEDSELLINGPRICE / WEIGHTINGMS) DESC) AS RN
    FROM ZEPTO
    WHERE OUTOFSTOCK = 0 AND WEIGHTINGMS > 0
)
SELECT 
    PWR.CATEGORY, 
    PWR.NAME, 
    PWR.PRICE_PER_GRAM, 
    PWR.DISCOUNTPERCENT,
    MD.MEDIAN_DISCOUNT,
    ROUND(PWR.DISCOUNTPERCENT - MD.MEDIAN_DISCOUNT, 2) AS DISCOUNT_VS_MEDIAN
FROM PRICE_WEIGHT_RANK PWR
JOIN MEDIAN_DISCOUNT MD ON PWR.CATEGORY = MD.CATEGORY
WHERE PWR.RN = 1
ORDER BY PWR.PRICE_PER_GRAM DESC;
    
-- PURPOSE: THIS QUERY PINPOINTS THE MOST EXPENSIVE PRODUCTS PER GRAM IN EACH CATEGORY AND COMPARES THEIR DISCOUNTS TO THE CATEGORY MEDIAN, USEFUL FOR EVALUATING PRICING STRATEGIES FOR HIGH-VALUE ITEMS. IT SHOWCASES ADVANCED SKILLS LIKE PERCENTILE_CONT FOR MEDIAN CALCULATION, WINDOW FUNCTIONS (ROW_NUMBER), JOINS, AND ARITHMETIC COMPARISONS.

-- Q18. USING A RECURSIVE QUERY, CREATE A HIERARCHY OF PRICE RANGES (E.G., 0-100, 100-500, 500-1000, >1000) AND COUNT THE NUMBER OF IN-STOCK PRODUCTS IN EACH RANGE PER CATEGORY, INCLUDING THE PERCENTAGE OF TOTAL IN-STOCK PRODUCTS IN THAT CATEGORY.
WITH RECURSIVE PRICE_RANGES (RANGE_NAME, MIN_PRICE, MAX_PRICE) AS (
    SELECT '0-100', 0, 100
    UNION ALL
    SELECT '100-500', 100, 500
    UNION ALL
    SELECT '500-1000', 500, 1000
    UNION ALL
    SELECT '>1000', 1000, 999999
),
CATEGORY_TOTAL AS (
    SELECT CATEGORY, COUNT(*) AS TOTAL_IN_STOCK
    FROM ZEPTO
    WHERE OUTOFSTOCK = 0
    GROUP BY CATEGORY
)
SELECT PR.RANGE_NAME, Z.CATEGORY, 
       COUNT(Z.NAME) AS PRODUCT_COUNT,
       CT.TOTAL_IN_STOCK,
       ROUND((COUNT(Z.NAME) / CT.TOTAL_IN_STOCK) * 100, 2) AS PERCENT_OF_CATEGORY
FROM PRICE_RANGES PR
LEFT JOIN ZEPTO Z ON Z.DISCOUNTEDSELLINGPRICE BETWEEN PR.MIN_PRICE AND PR.MAX_PRICE AND Z.OUTOFSTOCK = 0
JOIN CATEGORY_TOTAL CT ON Z.CATEGORY = CT.CATEGORY
GROUP BY PR.RANGE_NAME, Z.CATEGORY, CT.TOTAL_IN_STOCK
ORDER BY Z.CATEGORY, PR.MIN_PRICE;
-- PURPOSE: THIS QUERY CATEGORIZES PRODUCTS BY PRICE RANGES AND ANALYZES THEIR DISTRIBUTION WITHIN CATEGORIES, PROVIDING INSIGHTS INTO PRICING DIVERSITY AND INVENTORY SPREAD. IT DEMONSTRATES RECURSIVE CTEs FOR RANGE DEFINITION, LEFT JOINS, GROUP BY AGGREGATIONS, AND PERCENTAGE CALCULATIONS, WITH A FOCUS ON HIERARCHICAL DATA ORGANIZATION.

