CREATE DATABASE ZEPTO;

USE ZEPTO;

DROP TABLE IF EXISTS ZEPTO;

CREATE TABLE ZEPTO(
sku_id SERIAL PRIMARY KEY,
category VARCHAR(120),
`name` VARCHAR(150) NOT NULL,
mrp NUMERIC(8,2),
discountPercent NUMERIC(5,2),
availbleQuantity INTEGER,
discountedSellingPrice NUMERIC(5,2),
weightInGms INTEGER,
outOfStock BOOLEAN,
quantity INTEGER
);

LOAD DATA LOCAL INFILE 'E:/zepto_v2.csv'
INTO TABLE ZEPTO
CHARACTER SET latin1
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(category, name, mrp, discountPercent, availableQuantity, discountedSellingPrice, weightInGms, @outOfStock, quantity)
SET outOfStock = IF(LOWER(TRIM(@outOfStock)) IN ('true','1','yes'), 1, 0);

-- DATA EXPLORATION

-- COUNT NO OF ROWS
SELECT COUNT(*) FROM ZEPTO;

-- UNDERSTANDING THE DATA IN THE TABLE
SELECT * FROM ZEPTO;
SELECT * FROM ZEPTO LIMIT 10;

-- CHECKING NULL VALUES IN THE ALL COLUMNS AT ONCE
SELECT * FROM ZEPTO
WHERE CATEGORY IS NULL OR
`NAME` IS NULL OR
MRP IS NULL OR
discountPercent	IS NULL OR
availableQuantity  IS NULL OR
weightInGms IS NULL OR
outOfStock IS NULL OR
discountedSellingPrice IS NULL OR
quantity IS NULL;

-- DIFFERENT PRODUCT CATEGORY IN ZEPTO LIST
SELECT DISTINCT CATEGORY FROM ZEPTO;

-- COUNT OF PRODUCTS THAT ARE BASED ON THE STOCK
SELECT outOfStock , COUNT(*) FROM ZEPTO GROUP BY outOfStock;
-- OR
SELECT SUM(outOfStock = 1) 'NO OF PRODUCTS THAT ARE OUT OF STOCK' ,
SUM(outOfStock = 0) AS 'THAT ARE IN STOCK'
FROM ZEPTO;
-- OR
SELECT COUNT(OUTOFSTOCK) AS 'NO OF PRODUCTS THAT ARE OUT OF STOCK' FROM ZEPTO WHERE OUTOFSTOCK = 1;
SELECT COUNT(OUTOFSTOCK) AS 'NO OF PRODUCTS THAT ARE IN STOCK' FROM ZEPTO WHERE OUTOFSTOCK = 1;


-- PRODUCTS THAT ARE APPEARED MUTLIPLE TIMES
SELECT row_number() OVER (ORDER BY COUNT(*) DESC) 'S.NO',
NAME , COUNT(*) AS 'NO_OF_REPEATED' FROM ZEPTO GROUP BY NAME HAVING COUNT(*) > 1 ORDER BY COUNT(*) DESC; 

-- DATA CLEANING
SELECT * FROM ZEPTO WHERE MRP = 0 OR discountedSellingPrice = 0; -- THERE IS ONE PRODUCTS WITH PRICE(MRP) IS ZERO IN THIS CASE CLEANING REQUIRED

-- MySQLâ€™s safe update mode is protecting you from accidentally deleting a lot of rows without using a primary key column in the WHERE clause.
SET SQL_SAFE_UPDATES = 0;
DELETE FROM ZEPTO WHERE MRP = 0;
SET SQL_SAFE_UPDATES = 1;

-- LET'S CONVERT TO PAISE TO RUPEES 
UPDATE ZEPTO SET MRP = MRP / 100 , DISCOUNTEDSELLINGPRICE = DISCOUNTEDSELLINGPRICE / 100; 


-- Q1 FIND THE 10 BEST PRODUCTS BASED ON DISCOUNTEDSELLINGPRICE ?
SELECT DISTINCT NAME , MRP, DISCOUNTEDSELLINGPRICE 
FROM ZEPTO 
ORDER BY DISCOUNTEDSELLINGPRICE DESC LIMIT 10;

-- Q2 WHAT ARE THE TOP 20 PRODUCTS WITH HIGH MRP THAT ARE OUTOFSTACK
SELECT DISTINCT `NAME` , MRP
FROM ZEPTO 
WHERE OUTOFSTOCK = 1 ORDER BY MRP DESC LIMIT 20;

-- Q3 CALCULATE THE TOTAL REVENUE GENERATED BY EACH CATEGORY ?
SELECT CATEGORY ,SUM(DISCOUNTEDSELLINGPRICE * QUANTITY) AS 'REVENUE' 
FROM ZEPTO 
GROUP BY CATEGORY
ORDER BY REVENUE;

-- Q4 FIND THE PRODUCTS WHOSE PRICE IS GREATER THAN Rs. 500 AND DISCOUNT IS LESS THAN Rs. 10 ?
SELECT NAME , MRP , DISCOUNTPERCENT
FROM ZEPTO 
WHERE MRP > 500 AND DISCOUNTPERCENT < 10
ORDER BY MRP DESC , DISCOUNTPERCENT DESC;

-- Q5 IDENTIFY THE TOP CATEGORIES WITH HIGHEST AVERAGE DISCOUNT PERCENTAGES ?
SELECT CATEGORY , AVG(DISCOUNTPERCENT) 'AVERAGE DISCOUNT PERCENTAGES'
FROM ZEPTO GROUP BY CATEGORY 
ORDER BY AVG(DISCOUNTPERCENT) DESC
LIMIT 5;

-- Q6. Find the price per gram for products above 100g and sort by best value.
SELECT DISTINCT NAME , WEIGHTINGMS , DISCOUNTEDSELLINGPRICE , ROUND(DISCOUNTEDSELLINGPRICE / WEIGHTINGMS , 2) AS 'PRICE PER GRAM' 
FROM ZEPTO 
WHERE  weightInGms >= 100 
ORDER BY DISCOUNTEDSELLINGPRICE / weightInGms DESC;

-- Q7. --Q7.Group the products into categories like Low, Medium, Bulk
SELECT NAME , WEIGHTINGMS , 
CASE WHEN WEIGHTINGMS < 1000 THEN 'LOW'
WHEN WEIGHTINGMS < 5000 THEN 'MEDIUM'
ELSE 'BULK'
END AS 'WEIGHT_CATEGORY'
FROM ZEPTO;

--  Q8.What is the Total Inventory Weight Per Category 
SELECT CATEGORY,
SUM(WEIGHTINGMS * AVAILABLEQUANTITY) AS TOTAL_WEIGHT
FROM ZEPTO
GROUP BY CATEGORY
ORDER BY TOTAL_WEIGHT DESC;
     




